{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brian/Development/gift-rec-9000/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Faker from 'faker';\nimport pluralize from 'pluralize';\n\nfunction App() {\n  _s();\n\n  const [descriptor, setDescriptor] = useState(\"\");\n  const [person, setPerson] = useState(\"\");\n  const [activity, setActivity] = useState(\"\");\n  useEffect(() => {\n    getWords();\n  }, []);\n\n  const getWords = () => {\n    setDescriptor(Faker.commerce.productAdjective());\n    setPerson(Faker.name.jobTitle());\n    setActivity(pluralize(Faker.hacker.verb()).replace(/^\\w/, c => c.toUpperCase()) + \" \" + Faker.hacker.noun());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Best \", /*#__PURE__*/_jsxDEV(\"em\", {\n        children: descriptor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this), \" Gifts For Your \", /*#__PURE__*/_jsxDEV(\"em\", {\n        children: person\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 53\n      }, this), \" Who \", /*#__PURE__*/_jsxDEV(\"em\", {\n        children: activity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 75\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getWords(),\n      children: \"refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"79iZoXbBDPhaH27jDSeeSl9blO4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brian/Development/gift-rec-9000/src/App.js"],"names":["React","useState","useEffect","Faker","pluralize","App","descriptor","setDescriptor","person","setPerson","activity","setActivity","getWords","commerce","productAdjective","name","jobTitle","hacker","verb","replace","c","toUpperCase","noun"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,MAAM;AACrBL,IAAAA,aAAa,CAACJ,KAAK,CAACU,QAAN,CAAeC,gBAAf,EAAD,CAAb;AACAL,IAAAA,SAAS,CAACN,KAAK,CAACY,IAAN,CAAWC,QAAX,EAAD,CAAT;AACAL,IAAAA,WAAW,CAACP,SAAS,CAACD,KAAK,CAACc,MAAN,CAAaC,IAAb,EAAD,CAAT,CAA+BC,OAA/B,CAAuC,KAAvC,EAA8CC,CAAC,IAAIA,CAAC,CAACC,WAAF,EAAnD,IAAsE,GAAtE,GAA4ElB,KAAK,CAACc,MAAN,CAAaK,IAAb,EAA7E,CAAX;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA,uCAAS;AAAA,kBAAKhB;AAAL;AAAA;AAAA;AAAA;AAAA,cAAT,mCAA8C;AAAA,kBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,cAA9C,wBAAoE;AAAA,kBAAKE;AAAL;AAAA;AAAA;AAAA;AAAA,cAApE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAME,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GArBQP,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Faker from 'faker'\nimport pluralize from 'pluralize'\n\nfunction App() {\n  const [descriptor, setDescriptor] = useState(\"\")\n  const [person, setPerson] = useState(\"\")\n  const [activity, setActivity] = useState(\"\")\n  \n  useEffect(() => {\n    getWords()\n  }, [])\n  \n  const getWords = () => {\n    setDescriptor(Faker.commerce.productAdjective())\n    setPerson(Faker.name.jobTitle())\n    setActivity(pluralize(Faker.hacker.verb()).replace(/^\\w/, c => c.toUpperCase()) + \" \" + Faker.hacker.noun())\n  }\n\n  return (\n    <div>\n      <h1>Best <em>{descriptor}</em> Gifts For Your <em>{person}</em> Who <em>{activity}</em></h1>\n      <button onClick={() => getWords()}>refresh</button>\n    </div>\n  )\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}